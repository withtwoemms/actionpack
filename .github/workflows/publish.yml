name: publish

on:
  push:
    branches: [main]
    tags: ['*']

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Make virtual environment
        run: make

      - name: Run tests
        run: make tests

  publish:
    runs-on: ubuntu-latest
    needs: check
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # NOTE: fetches all history for all branches and tags

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Make virtual environment
        run: make

      - name: Build unofficial distribution ðŸ“¦
        run: PYTHONWARNINGS="ignore" LOCAL_VERSION_SCHEME=true make build

      - name: Check if an official version is to be released
        run: |
            echo 'IS_OFFICIAL_VERSION=$( make is-official-version )' >> $GITHUB_ENV

      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        if: env.IS_OFFICIAL_VERSION != 'true'
        with:
          user: __token__
          password: ${{ secrets.test_pypi_password }}
          repository_url: https://test.pypi.org/legacy/

      - name: Build official distribution ðŸ“¦
        if: contains(github.ref, 'refs/tags/')
        run: make clean-build && make build

      - name: Publish distribution ðŸ“¦ to PyPI
        if: contains(github.ref, 'refs/tags/')
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
